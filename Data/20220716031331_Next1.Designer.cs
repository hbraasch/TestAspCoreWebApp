// <auto-generated />
using System;
using EasyMinutesServer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyMinutesServer.Data
{
    [DbContext(typeof(DbaseContext))]
    [Migration("20220716031331_Next1")]
    partial class Next1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+MeetingCx", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+ParticipantCx", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessPin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUnsubscribed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+ParticipantMasterSlave", b =>
                {
                    b.Property<int>("SlaveId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MasterId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParticipantCxId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SlaveId", "MasterId");

                    b.HasIndex("MasterId");

                    b.HasIndex("ParticipantCxId");

                    b.ToTable("ParticipantMasterSlave");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+PinCx", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("DateTimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.ToTable("Pins");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+TopicCx", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MeetingCxId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MeetingCxId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+TopicSessionCx", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("DateTimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("ToBeCompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TopicId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("MeetingCxParticipantCx", b =>
                {
                    b.Property<int>("DelegatesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EditableMeetingsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DelegatesId", "EditableMeetingsId");

                    b.HasIndex("EditableMeetingsId");

                    b.ToTable("MeetingCxParticipantCx");
                });

            modelBuilder.Entity("ParticipantCxTopicSessionCx", b =>
                {
                    b.Property<int>("AllocatedParticipantsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllocatedSessionsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AllocatedParticipantsId", "AllocatedSessionsId");

                    b.HasIndex("AllocatedSessionsId");

                    b.ToTable("ParticipantCxTopicSessionCx");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+MeetingCx", b =>
                {
                    b.HasOne("EasyMinutesServer.Models.DbaseContext+ParticipantCx", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+ParticipantMasterSlave", b =>
                {
                    b.HasOne("EasyMinutesServer.Models.DbaseContext+ParticipantCx", "Master")
                        .WithMany("Masters")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyMinutesServer.Models.DbaseContext+ParticipantCx", null)
                        .WithMany("Slaves")
                        .HasForeignKey("ParticipantCxId");

                    b.HasOne("EasyMinutesServer.Models.DbaseContext+ParticipantCx", "Slave")
                        .WithMany()
                        .HasForeignKey("SlaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Master");

                    b.Navigation("Slave");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+PinCx", b =>
                {
                    b.HasOne("EasyMinutesServer.Models.DbaseContext+ParticipantCx", "Participant")
                        .WithMany("Pins")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+TopicCx", b =>
                {
                    b.HasOne("EasyMinutesServer.Models.DbaseContext+MeetingCx", null)
                        .WithMany("Topics")
                        .HasForeignKey("MeetingCxId");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+TopicSessionCx", b =>
                {
                    b.HasOne("EasyMinutesServer.Models.DbaseContext+TopicCx", "Topic")
                        .WithMany("Sessions")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("MeetingCxParticipantCx", b =>
                {
                    b.HasOne("EasyMinutesServer.Models.DbaseContext+ParticipantCx", null)
                        .WithMany()
                        .HasForeignKey("DelegatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyMinutesServer.Models.DbaseContext+MeetingCx", null)
                        .WithMany()
                        .HasForeignKey("EditableMeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParticipantCxTopicSessionCx", b =>
                {
                    b.HasOne("EasyMinutesServer.Models.DbaseContext+ParticipantCx", null)
                        .WithMany()
                        .HasForeignKey("AllocatedParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyMinutesServer.Models.DbaseContext+TopicSessionCx", null)
                        .WithMany()
                        .HasForeignKey("AllocatedSessionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+MeetingCx", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+ParticipantCx", b =>
                {
                    b.Navigation("Masters");

                    b.Navigation("Pins");

                    b.Navigation("Slaves");
                });

            modelBuilder.Entity("EasyMinutesServer.Models.DbaseContext+TopicCx", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
